name: Build and deploy NestJS app to Azure Web App - diagnostic-api

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm install

      - name: Build app
        run: npm run build

      - name: Generate Prisma client (optional, si no lo haces en build)
        run: npx prisma generate

      - name: Zip deployment package
        run: |
          zip -r release.zip dist package.json package-lock.json prisma
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: diagnostic-api
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: diagnostic-api

      - name: Unzip artifact
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_FE0AA0F5A5A546DCAE57E5D56731BA5D }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_AC0A922D23EC4021A864E90DD723E7FA }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_88D6943CD257499280E3126B0D1C396A }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'diagnostic-api'
          slot-name: 'Production'
          package: .
