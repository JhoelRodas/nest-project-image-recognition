name: Build and deploy Node.js app to Azure Web App - sw-api

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  NODE_ENV: production
  DATABASE_URL: ${{ secrets.DATABASE_URL }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --include=dev

      - name: Build application
        run: npm run build

      - name: Run Prisma generate
        run: npx prisma generate

      - name: Create deployment package
        run: |
          mkdir -p deployment-folder
          cp -r dist/ package.json package-lock.json prisma/ deployment-folder/
          [ -d "node_modules/.prisma" ] && cp -r node_modules/.prisma deployment-folder/node_modules/
          cd deployment-folder && zip -r ../release.zip ./*

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Prepare deployment
        run: |
          unzip release.zip -d deployment-folder
          tree deployment-folder -L 3  # Verifica estructura

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_A7134AA847F640F0811153114A5A64FF }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_EBB03E81805C432F96B3771C70004C6F }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_02AC7B80CAAA4394B588B7C6357587AA }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'sw-api'
          slot-name: 'Production'
          package: deployment-folder
